@page
@model IdentityServer.Pages.Login.Index

@{
    Layout = "_LayoutLogin";
}

<div class="row mb-1">
    <div class="col">
        <img src="~/logo_long.png" class="login-logo" />
    </div>
</div>

<div class="row d-flex justify-content-center">

    <div class="col-12 col-md-8">

        <div class="mb-4">
            <span class="fs-2">Sign in</span>
            <p class="text-muted">

                @{
                    var methods = new List<string>();

                    if (Model.View.EnableLocalLogin)
                    {
                        methods.Add("your local account");
                    }
                    if (Model.View.EnablePasskeyLogin)
                    {
                        methods.Add("a passkey");
                    }
                    if (Model.View.VisibleExternalProviders.Any())
                    {
                        methods.Add("a trusted partner");
                    }

                    var signinAdvice = methods.Any()
                    ? $"You can sign in using {string.Join(", ", methods.Take(methods.Count - 1))}" +
                    $"{(methods.Count > 1 ? " or " : "")}{methods.Last()}."
                    : "No login methods are currently available.";
                }

                @signinAdvice

            </p>
        </div>

        @if (Model.View.EnableLocalLogin)
        {
            <div data-intent="local-login">
                <form asp-page="/Account/Login/Index">
                    <input type="hidden" asp-for="Input.ReturnUrl" />
                    <input type="hidden" asp-for="Input.RememberLogin" />

                    <div class="form-floating mb-3">
                        <input class="form-control" asp-for="Input.Username" placeholder="Username" autofocus>
                        <label asp-for="Input.Username">Username</label>
                        <span asp-validation-for="Input.Username" class="text-danger"></span>
                    </div>
                    <div class="form-floating">
                        <input type="password" class="form-control" asp-for="Input.Password" placeholder="Password">
                        <label asp-for="Input.Password">Password</label>
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>

                    <div class="login-supplementary-text">
                        <p>
                            Having trouble?
                            <a class="mx-1 rounded-5 text-decoration-none" id="recovery-code-login" asp-page="./ForgotPassword" asp-route-returnUrl="Input.ReturnUrl">
                                Reset your password
                            </a>
                        </p>
                    </div>

                    <div class="d-flex gap-2">
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary rounded-pill" name="Input.Button" value="login">Login</button>
                            <button class="btn btn-light text-muted rounded-pill" name="Input.Button" value="cancel">Cancel</button>
                        </div>
                        @if (Model.View.EnablePasskeyLogin)
                        {
                            <a class="btn btn-light d-flex align-items-center ms-auto text-muted rounded-pill">
                                <img class="signin-partner-icon me-1" src="~/fido.webp" alt="Yubikey Icon" style="height:24px;" />
                                Use a Passkey
                            </a>
                        }
                    </div>
                </form>
            </div>
        }

        @if (Model.View.VisibleExternalProviders.Any())
        {
            <div class="col-12">

                <div class="mb-1" data-intent="external-login">

                    @if (Model.View.EnableLocalLogin)
                    {
                        <hr />
                        <div class="fs-6 mb-1 fw-medium text-center">Sign in with a trusted partner...</div>
                    }

                    <ul class="list-unstyled">
                        @foreach (var provider in Model.View.VisibleExternalProviders)
                        {
                            <li class="mb-2">
                                <a class="btn btn-light border rounded p-2 shadow-sm d-flex justify-content-center align-items-center w-100"
                                   asp-page="/ExternalLogin/Challenge"
                                   asp-route-scheme="@provider.AuthenticationScheme"
                                   asp-route-returnUrl="@Model.Input.ReturnUrl"
                                   title="Sign in with @provider.DisplayName">

                                    @if (provider.DisplayName.Equals("Google"))
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24" height="24" viewBox="0 0 48 48" class="me-1">
                                            <path fill="#FFC107" d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12  c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20  c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"></path>
                                            <path fill="#FF3D00" d="M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657  C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"></path>
                                            <path fill="#4CAF50" d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36  c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"></path>
                                            <path fill="#1976D2" d="M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571  c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"></path>
                                        </svg>
                                    }
                                    @if (provider.DisplayName.Equals("Microsoft"))
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24" height="24" viewBox="0 0 48 48" class="me-1">
                                            <path fill="#ff5722" d="M6 6H22V22H6z" transform="rotate(-180 14 14)"></path>
                                            <path fill="#4caf50" d="M26 6H42V22H26z" transform="rotate(-180 34 14)"></path>
                                            <path fill="#ffc107" d="M26 26H42V42H26z" transform="rotate(-180 34 34)"></path>
                                            <path fill="#03a9f4" d="M6 26H22V42H6z" transform="rotate(-180 14 34)"></path>
                                        </svg>
                                    }
                                    <span>@provider.DisplayName</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }

    </div>

</div>
